"use client";

import { useId } from "react";
import type { City } from "@/types/city";
import { CityItem } from "./CityItem";

interface PopularCitiesListProps {
  cities: City[];
  selectedCityIds: Set<string>;
  onAddCity: (city: City) => void;
  onRemoveCity: (cityId: string) => void;
  isLoading?: boolean;
  isSearching?: boolean;
  hasSearched?: boolean;
}

export const PopularCitiesList = ({
  cities,
  selectedCityIds,
  onAddCity,
  onRemoveCity,
  isSearching = false,
  hasSearched = false,
}: PopularCitiesListProps) => {
  const clipPathId = useId();
  const selectedCities = cities.filter((city) => selectedCityIds.has(city.id));
  const availableCities = cities.filter((city) => !selectedCityIds.has(city.id));

  if (isSearching) {
    return (
      <div className="flex justify-center items-center pt-30">
        <svg
          width="48"
          height="48"
          viewBox="0 0 32 32"
          fill="none"
          className="animate-spin"
          xmlns="http://www.w3.org/2000/svg"
          aria-label="검색 중"
        >
          <title>검색 중</title>
          <g clipPath={`url(#${clipPathId})`}>
            <g transform="matrix(0.004 0.0149282 -0.0149282 0.004 16 16)">
              <foreignObject x="-1426.44" y="-1426.44" width="2852.89" height="2852.89">
                <div
                  style={{
                    background:
                      "conic-gradient(from 90deg,rgba(115,115,115,1) 0deg,rgba(217,217,217,0) 145.385deg,rgba(115,115,115,1) 360deg)",
                    height: "100%",
                    width: "100%",
                    opacity: 1,
                  }}
                ></div>
              </foreignObject>
            </g>
          </g>
          <path d="M4.68629 4.68629C3.90525 5.46734 3.90524 6.73367 4.68629 7.51472C5.46734 8.29577 6.73367 8.29577 7.51472 7.51472L6.10051 6.1005L4.68629 4.68629ZM18.1901 2.17236L17.8772 4.14774L18.1901 2.17236ZM28.4741 9.64414L26.6921 10.5521L28.4741 9.64414ZM30 16L32 16L30 16ZM28.4741 22.3559L26.6921 21.4479L28.4741 22.3559ZM24.229 27.3262L23.0534 25.7082L24.229 27.3262ZM17.8772 27.8523C16.7862 28.0251 16.0419 29.0495 16.2147 30.1405C16.3875 31.2315 17.412 31.9758 18.5029 31.803L18.1901 29.8276L17.8772 27.8523ZM6.10051 6.1005L7.51472 7.51472C8.85379 6.17565 10.4908 5.17251 12.2918 4.58732L11.6738 2.68521L11.0557 0.783095C8.65435 1.56335 6.47172 2.90087 4.68629 4.68629L6.10051 6.1005ZM11.6738 2.68521L12.2918 4.58732C14.0928 4.00213 16.0068 3.8515 17.8772 4.14774L18.1901 2.17236L18.503 0.196987C16.0091 -0.198005 13.4571 0.00283778 11.0557 0.783095L11.6738 2.68521ZM18.1901 2.17236L17.8772 4.14774C19.7476 4.44398 21.5214 5.17869 23.0534 6.2918L24.229 4.67376L25.4046 3.05573C23.3618 1.57159 20.9968 0.591979 18.503 0.196987L18.1901 2.17236ZM24.229 4.67376L23.0534 6.2918C24.5855 7.4049 25.8323 8.8648 26.6921 10.5521L28.4741 9.64414L30.2561 8.73616C29.1098 6.48639 27.4473 4.53987 25.4046 3.05573L24.229 4.67376ZM28.4741 9.64414L26.6921 10.5521C27.5518 12.2394 28 14.1063 28 16H30L32 16C32 13.475 31.4024 10.9859 30.2561 8.73616L28.4741 9.64414ZM30 16H28C28 17.8937 27.5518 19.7606 26.6921 21.4479L28.4741 22.3559L30.2561 23.2639C31.4024 21.0141 32 18.525 32 16L30 16ZM28.4741 22.3559L26.6921 21.4479C25.8323 23.1352 24.5855 24.5951 23.0534 25.7082L24.229 27.3262L25.4046 28.9443C27.4473 27.4601 29.1098 25.5136 30.2561 23.2639L28.4741 22.3559ZM24.229 27.3262L23.0534 25.7082C21.5214 26.8213 19.7476 27.556 17.8772 27.8523L18.1901 29.8276L18.5029 31.803C20.9968 31.408 23.3618 30.4284 25.4046 28.9443L24.229 27.3262Z" />
          <defs>
            <clipPath id={clipPathId}>
              <path d="M4.68629 4.68629C3.90525 5.46734 3.90524 6.73367 4.68629 7.51472C5.46734 8.29577 6.73367 8.29577 7.51472 7.51472L6.10051 6.1005L4.68629 4.68629ZM18.1901 2.17236L17.8772 4.14774L18.1901 2.17236ZM28.4741 9.64414L26.6921 10.5521L28.4741 9.64414ZM30 16L32 16L30 16ZM28.4741 22.3559L26.6921 21.4479L28.4741 22.3559ZM24.229 27.3262L23.0534 25.7082L24.229 27.3262ZM17.8772 27.8523C16.7862 28.0251 16.0419 29.0495 16.2147 30.1405C16.3875 31.2315 17.412 31.9758 18.5029 31.803L18.1901 29.8276L17.8772 27.8523ZM6.10051 6.1005L7.51472 7.51472C8.85379 6.17565 10.4908 5.17251 12.2918 4.58732L11.6738 2.68521L11.0557 0.783095C8.65435 1.56335 6.47172 2.90087 4.68629 4.68629L6.10051 6.1005ZM11.6738 2.68521L12.2918 4.58732C14.0928 4.00213 16.0068 3.8515 17.8772 4.14774L18.1901 2.17236L18.503 0.196987C16.0091 -0.198005 13.4571 0.00283778 11.0557 0.783095L11.6738 2.68521ZM18.1901 2.17236L17.8772 4.14774C19.7476 4.44398 21.5214 5.17869 23.0534 6.2918L24.229 4.67376L25.4046 3.05573C23.3618 1.57159 20.9968 0.591979 18.503 0.196987L18.1901 2.17236ZM24.229 4.67376L23.0534 6.2918C24.5855 7.4049 25.8323 8.8648 26.6921 10.5521L28.4741 9.64414L30.2561 8.73616C29.1098 6.48639 27.4473 4.53987 25.4046 3.05573L24.229 4.67376ZM28.4741 9.64414L26.6921 10.5521C27.5518 12.2394 28 14.1063 28 16H30L32 16C32 13.475 31.4024 10.9859 30.2561 8.73616L28.4741 9.64414ZM30 16H28C28 17.8937 27.5518 19.7606 26.6921 21.4479L28.4741 22.3559L30.2561 23.2639C31.4024 21.0141 32 18.525 32 16L30 16ZM28.4741 22.3559L26.6921 21.4479C25.8323 23.1352 24.5855 24.5951 23.0534 25.7082L24.229 27.3262L25.4046 28.9443C27.4473 27.4601 29.1098 25.5136 30.2561 23.2639L28.4741 22.3559ZM24.229 27.3262L23.0534 25.7082C21.5214 26.8213 19.7476 27.556 17.8772 27.8523L18.1901 29.8276L18.5029 31.803C20.9968 31.408 23.3618 30.4284 25.4046 28.9443L24.229 27.3262Z" />
            </clipPath>
          </defs>
        </svg>
      </div>
    );
  }

  if (!isSearching && hasSearched && cities.length === 0) {
    return (
      <div className="flex justify-center items-center pt-30">
        <div className="text-text-thirdly text-base">검색 결과가 없어요</div>
      </div>
    );
  }

  return (
    <div className="space-y-0">
      {selectedCities.map((city, index) => (
        <CityItem
          key={city.id}
          city={city}
          isSelected={true}
          onAdd={onAddCity}
          onRemove={onRemoveCity}
          showDivider={index < selectedCities.length - 1 || availableCities.length > 0}
        />
      ))}

      {availableCities.map((city, index) => (
        <CityItem
          key={city.id}
          city={city}
          isSelected={false}
          onAdd={onAddCity}
          onRemove={onRemoveCity}
          showDivider={index < availableCities.length - 1}
        />
      ))}
    </div>
  );
};
